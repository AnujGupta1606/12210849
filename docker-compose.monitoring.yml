version: '3.8'

services:
  # Your existing services
  mongodb:
    image: mongo:7.0
    container_name: url-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - url-network

  redis:
    image: redis:7.2-alpine
    container_name: url-redis
    ports:
      - "6379:6379"
    networks:
      - url-network

  backend:
    build: ./backend
    container_name: url-backend
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/urlshortener?authSource=admin
      - REDIS_URL=redis://redis:6379
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    networks:
      - url-network

  frontend:
    build: .
    container_name: url-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - url-network

  # MONITORING STACK
  prometheus:
    image: prom/prometheus:latest
    container_name: url-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - url-network

  grafana:
    image: grafana/grafana:latest
    container_name: url-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - url-network

  # Nginx metrics exporter
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://frontend:80/nginx_status'
    depends_on:
      - frontend
    networks:
      - url-network

  # System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - url-network

  # Docker container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - url-network

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data:

networks:
  url-network:
    driver: bridge
